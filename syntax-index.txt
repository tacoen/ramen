## WorldTime

        ref: https://docs.python.org/2/library/datetime.html
        
### adv
#### Syntax:
``` python
WorldTime.adv(a=1,block=False)
```

### adv_day
#### Syntax:
``` python
WorldTime.adv_day(a=1,block=True)
```

### next_day
#### Syntax:
``` python
WorldTime.next_day(hour=6,block=True)
```

### seed
#### Syntax:
``` python
WorldTime.seed(diff)
```

### starttime
#### Syntax:
``` python
WorldTime.starttime(gamedate)
```

### time_populate
#### Syntax:
``` python
WorldTime.time_populate()
```


## container
### setdata
#### Syntax:
``` python
container.setdata(what,**kwargs)
```


## event
### is_pass
#### Syntax:
``` python
event.is_pass()
```

### occur
#### Syntax:
``` python
event.occur()
```

### set_occur
#### Syntax:
``` python
event.set_occur(**kwargs)
```

### set_pass
#### Syntax:
``` python
event.set_pass()
```


## inventory
Base: [[ramen_object]]
### add
#### Syntax:
``` python
inventory.add(item)
```

### drop
#### Syntax:
``` python
inventory.drop(item_id)
```

### transfer
#### Syntax:
``` python
inventory.transfer(item_id,store=storage)
```

### use
#### Syntax:
``` python
inventory.use(item_id,who=None)
```


## item
Base: [[ramen_object]]
### icon
#### Syntax:
``` python
item.icon()
```

### load
#### Syntax:
``` python
item.load(id=None,**kwargs)
```


## npc
Base: [[ramen_object]]
### chat_usingjson
#### Syntax:
``` python
npc.chat_usingjson(key=None,use_pose=True,file=None,pose=None)
```

### create_sideimage
#### Syntax:
``` python
npc.create_sideimage(img,temp_img,tag)
```

### define_byfile
#### Syntax:
``` python
npc.define_byfile(main=None)
```

### dialing
#### Syntax:
``` python
npc.dialing()
```

### extend
#### Syntax:
``` python
npc.extend()
```

### gain
#### Syntax:
``` python
npc.gain(what=None,value=1)
```

### get_stat
#### Syntax:
``` python
npc.get_stat()
```

### load
#### Syntax:
``` python
npc.load(id=None,**kwargs)
```

### onphone
#### Syntax:
``` python
npc.onphone(state=False)
```

### phonein
#### Syntax:
``` python
npc.phonein(what=label,jl=None,jsonkey=None)
```

### phoneout
#### Syntax:
``` python
npc.phoneout(what=None,jl=None,jsonkey=None)
```

### play_audio
#### Syntax:
``` python
npc.play_audio(name=None)
```

### play_video
#### Syntax:
``` python
npc.play_video(name=None,loops=-1)
```

### set_phonenum
#### Syntax:
``` python
npc.set_phonenum(fourdig=None)
```

### set_stat
#### Syntax:
``` python
npc.set_stat(**kwargs)
```

### spriteanim
#### Syntax:
``` python
npc.spriteanim(name=None,list=None,tick=0.25)
```


## npcrowd
Base: [[ramen_object]]
### load
#### Syntax:
``` python
npcrowd.load(id=None,**kwargs)
```

### makenpc_image
#### Syntax:
``` python
npcrowd.makenpc_image(who)
```

### meet
#### Syntax:
``` python
npcrowd.meet(who,label=None,d=None)
```


## phone
Base: [[ramen_object]]
### hide
#### Syntax:
``` python
phone.hide()
```

### load
#### Syntax:
``` python
phone.load(id=None,**kwargs)
```

### pickup
#### Syntax:
``` python
phone.pickup(appname=False)
```


## player
Base: [[ramen_object]]
### banking
#### Syntax:
``` python
player.banking(ammount=0,where=bank,to=cash)
```

### gain
#### Syntax:
``` python
player.gain(what,value=1)
```

### load
#### Syntax:
``` python
player.load(id=None,**kwargs)
```

### newname
#### Syntax:
``` python
player.newname(name,lastname)
```

### pay
#### Syntax:
``` python
player.pay(where,ammount)
```

### set_limit
see: ramu.limit()
#### Syntax:
``` python
player.set_limit(key,value=None)
```


## ramen_object
### files
set object as files container
#### Syntax:
``` python
ramen_object.files(key=None,scope=None)
```

### get_dir
#### Syntax:
``` python
ramen_object.get_dir(p=0)
```

### index
#### Syntax:
``` python
ramen_object.index(what,where=None,ext=rpy)
```

### index_update
#### Syntax:
``` python
ramen_object.index_update(what=apps,**kwargs)
```

### load
chain for child-class
#### Syntax:
``` python
ramen_object.load(id=None,**kwargs)
```

### makegallery
#### Syntax:
``` python
ramen_object.makegallery(what,where)
```

### makestyle
#### Syntax:
``` python
ramen_object.makestyle(key,val)
```

### makestyle_area
#### Syntax:
``` python
ramen_object.makestyle_area(key,val)
```

### makestyle_hbar
#### Syntax:
``` python
ramen_object.makestyle_hbar(key,val)
```

### setdata
set object as data container
#### Syntax:
``` python
ramen_object.setdata(key,**kwargs)
```

### setdefault
#### Syntax:
``` python
ramen_object.setdefault(key,default,param=True)
```

### ui_set
#### Syntax:
``` python
ramen_object.ui_set(noparam=False,**kwargs)
```


## ramen_util
### buy
#### Syntax:
``` python
ramen_util.buy(price)
```

### coba
#### Syntax:
``` python
ramen_util.coba(x,a=1,b=2,c=3)
```

### color_Brighten
#### Syntax:
``` python
ramen_util.color_Brighten(hex_color,amount=0.2)
```

### color_Darken
#### Syntax:
``` python
ramen_util.color_Darken(hex_color,ammount=0.2)
```

### color_random
#### Syntax:
``` python
ramen_util.color_random(lo=0,hi=255)
```

### create_items
#### Syntax:
``` python
ramen_util.create_items(inventory,where,prefix,**kwargs)
```

### cycle
#### Syntax:
``` python
ramen_util.cycle(current,list)
```

### fn_ezy
Get renpy.loadable [file] base on last-seen [extension-list]
#### Syntax:
``` python
ramen_util.fn_ezy(file,ext=[u'.jpg', u'.png', u'.webp'])
```

### fn_files
Collect files from [where], and [keyword].
#### Syntax:
``` python
ramen_util.fn_files(where,key=False)
```

### fn_getdir
Get the directory of the scripts from renpy.get_filename_line
#### Syntax:
``` python
ramen_util.fn_getdir()
```

### fn_info
Get and extract the file information of the [file] as dict
#### Syntax:
``` python
ramen_util.fn_info(f)
```

### get_profilepic
#### Syntax:
``` python
ramen_util.get_profilepic(whoid,size=(48, 48))
```

### get_sceneimg
#### Syntax:
``` python
ramen_util.get_sceneimg(condition=None,bgr=None)
```

### json_file
#### Syntax:
``` python
ramen_util.json_file(file)
```

### json_write
#### Syntax:
``` python
ramen_util.json_write(file,data)
```

### limit
#### Syntax:
``` python
ramen_util.limit(what,ov,value=1)
```

### ltoggle
#### Syntax:
``` python
ramen_util.ltoggle(what)
```

### nicenaming
Turn 'nice_name some' to 'nicenamesome'.
#### Syntax:
``` python
ramen_util.nicenaming(str_strip,name)
```

### notify
#### Syntax:
``` python
ramen_util.notify(msg,icoram=None)
```

### random_color
#### Syntax:
``` python
ramen_util.random_color(lo=0,hi=255)
```

### random_int
#### Syntax:
``` python
ramen_util.random_int(min=0,max=1,array=False)
```

### random_of
#### Syntax:
``` python
ramen_util.random_of(array)
```

### random_shuffle
#### Syntax:
``` python
ramen_util.random_shuffle(array)
```

### safecolor_for_bgr
#### Syntax:
``` python
ramen_util.safecolor_for_bgr(hex_color,bgr_hc)
```

### safeid
Strip non-safecharacter for [id].
#### Syntax:
``` python
ramen_util.safeid(id)
```

### screen_check
#### Syntax:
``` python
ramen_util.screen_check(name)
```

### screen_hideby
#### Syntax:
``` python
ramen_util.screen_hideby(prefix)
```

### sfx
#### Syntax:
``` python
ramen_util.sfx(where,what,play=True,loop=False)
```

### theme_image
#### Syntax:
``` python
ramen_util.theme_image(where,what)
```

### toggle
#### Syntax:
``` python
ramen_util.toggle(what,sfx=True)
```


## scenery
Base: [[ramen_object]]
### imagemaping
#### Syntax:
``` python
scenery.imagemaping(floor,bgr=None)
```

### load
#### Syntax:
``` python
scenery.load(id=None,**kwargs)
```

### mazing
#### Syntax:
``` python
scenery.mazing(**kwargs)
```

### random_image
#### Syntax:
``` python
scenery.random_image(prefix,scope=None)
```

### scene_call
#### Syntax:
``` python
scenery.scene_call(what,id,f,d)
```

### shortcut
#### Syntax:
``` python
scenery.shortcut(id=None,**kwargs)
```


## shop
Base: [[ramen_object]]
### add
#### Syntax:
``` python
shop.add(item)
```

### buy
#### Syntax:
``` python
shop.buy(item)
```

### cart
#### Syntax:
``` python
shop.cart(item_id,check=False)
```

### checkout
#### Syntax:
``` python
shop.checkout()
```

### in_rbc
#### Syntax:
``` python
shop.in_rbc(what)
```

### load
#### Syntax:
``` python
shop.load(default=False,**kwargs)
```

### rbc
#### Syntax:
``` python
shop.rbc(what,add=True)
```

### rbc_clear
#### Syntax:
``` python
shop.rbc_clear()
```

### sell
#### Syntax:
``` python
shop.sell(item,price,cash=True)
```


## uiobj
Base: [[ramen_object]]
### load
#### Syntax:
``` python
uiobj.load(id=None,**kwargs)
```


